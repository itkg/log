<?xml version="1.0" encoding="UTF-8"?>

<project name="name-of-project" default="build">
  <property name="basedir" value="${project.basedir}" />
  <property name="source" value="${basedir}/src" />
 <target name="build"
   depends="prepare,composer,lint,phploc,pdepend,phpmd,phpcs,phpcs-ci,phpcpd,phpdoc,phpunit,phpcb"/>

 <target name="build-parallel"
   depends="prepare,lint,tools-parallel,phpunit,phpcb"/>

 <target name="tools-parallel" description="Run tools in parallel">
  <parallel threadCount="2">
   <sequential>
    <antcall target="pdepend"/>
    <antcall target="phpmd"/>
   </sequential>
   <antcall target="phpcpd"/>
   <antcall target="phpcs"/>
   <antcall target="phpcs-ci"/>
   <antcall target="phploc"/>
   <antcall target="phpdox"/>
  </parallel>
 </target>

 <target name="clean" description="Cleanup build artifacts">
  <delete dir="${basedir}/build/api"/>
  <delete dir="${basedir}/build/code-browser"/>
  <delete dir="${basedir}/build/coverage"/>
  <delete dir="${basedir}/build/logs"/>
  <delete dir="${basedir}/build/pdepend"/>
 </target>

 <target name="prepare" depends="clean" description="Prepare for build">
  <mkdir dir="${basedir}/build/api"/>
  <mkdir dir="${basedir}/build/code-browser"/>
  <mkdir dir="${basedir}/build/coverage"/>
  <mkdir dir="${basedir}/build/logs"/>
  <mkdir dir="${basedir}/build/pdepend"/>
  <mkdir dir="${basedir}/build/phpdox"/>
 </target>
<target name="composer">
  <exec
    command="php /bin/composer.phar update --dev"
    checkreturn="true"
    passthru="true" />
</target>
 <target name="lint" description="Perform syntax check of sourcecode files">
  <apply executable="php" failonerror="true">
   <arg value="-l" />

   <fileset dir="${basedir}/src">
    <include name="**/*.php" />
   </fileset>

   <fileset dir="${basedir}/tests">
    <include name="**/*.php" />
   </fileset>
  </apply>
 </target>

 <target name="phploc" description="Measure project size using PHPLOC">
  <exec executable="phploc">
   <arg value="--log-csv" />
   <arg value="${basedir}/build/logs/phploc.csv" />
   <arg path="${basedir}/src" />
  </exec>
 </target>

 <target name="pdepend" description="Calculate software metrics using PHP_Depend">
  <exec executable="pdepend">
   <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
   <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
   <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
   <arg path="${basedir}/src" />
  </exec>
 </target>

 <target name="phpmd" description="Generate pmd.xml using PHPMD">
  <exec logoutput="true" spawn="true" command="phpmd ${source} xml codesize,design,naming,unusedcode --reportfile ${basedir}/build/logs/pmd.xml" />
 </target>


 <target name="phpcs"
         description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
  <exec executable="phpcs">
   <arg value="--standard=${basedir}/build/phpcs.xml" />
   <arg path="${basedir}/src" />
  </exec>
 </target>



 <target name="phpcpd" description="Find duplicate code using PHPCPD">
  <exec executable="phpcpd">
   <arg value="--log-pmd" />
   <arg value="${basedir}/build/logs/pmd-cpd.xml" />
   <arg path="${basedir}/src" />
  </exec>
 </target>

<target name="phpcs-ci" description="Generate checkstyle.xml using PHP_CodeSniffer">
		<exec logoutput="true" command="phpcs --report=checkstyle --report-file=${basedir}/build/logs/checkstyle.xml --standard=PEAR ${source}" />
</target>

<target name="phpdoc" description="Generate API documentation using PHPDocumentor">
	<exec logoutput="true" command="phpdoc -d ${source} -t ${basedir}/build/api" />
</target>

<target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
	<exec logoutput="true" command="phpcb --log ${basedir}/build/logs --source ${source} --output ${basedir}/build/code-browser" />
</target>


 <target name="phpunit" description="Run unit tests using PHPUnit and generates junit.xml and clover.xml">
		<exec logoutput="true" command="phpunit --configuration=phpunit.xml --log-junit build/logs/phpunit.xml
			--coverage-clover build/logs/clover.xml
			--coverage-html build/coverage" />
	</target>

 <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
  <exec executable="phpcb">
   <arg value="--log" />
   <arg path="${basedir}/build/logs" />
   <arg value="--source" />
   <arg path="${basedir}/src" />
   <arg value="--output" />
   <arg path="${basedir}/build/code-browser" />
  </exec>
 </target>
</project>
